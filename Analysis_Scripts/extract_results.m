function extract_results(filepath, team, pipeline)
    % Author: Martin Constant (martin.constant@unige.ch)
    arguments
        filepath char;
        team char;
        pipeline char;
    end
    files = dir(fullfile([filepath filesep team filesep 'ERP' filesep char(pipeline)], [team '_participant*_' pipeline '.erp']));
    participant_list = [];
    for id = 1:length(files)
        erp_name = files(id).name;
        participant_list = [participant_list, str2double(extractBetween(erp_name, "participant", "_"))];
        ERP = pop_loaderp( 'filename', erp_name, 'filepath', files(id).folder);
        ALLERP(id) = ERP; %#ok<AGROW>
    end

    % Compute reaction times and accuracy
    % Save them to a table and save that table
    if pipeline == "Original"
        mean_rts = table;
        mean_correct = table;
        for row = 1:numel(ALLERP)
            mean_rts = get_rts(ALLERP(row), mean_rts, row);
            mean_correct = get_correct(ALLERP(row), mean_correct, row);
        end
        % Create output file if it doesn't exist
        if ~exist([filepath filesep 'behavior.csv'], 'file')
            fid = fopen([filepath filesep 'behavior.csv'], 'w');
            fprintf(fid, 'Team, Condition, RT_forms, RT_colors, forms_correct, colors_correct');
            fclose(fid);
        end
        opts = detectImportOptions([filepath filesep 'behavior.csv']);
        opts = setvartype(opts, ...
            ["Team",   "RT_forms", "RT_colors", "forms_correct", "colors_correct"], ...
            ["string", "double",   "double",    "double",        "double"]);
        
        % Load the existing output file and append new results to it
        behavior = readtable([filepath filesep 'behavior.csv'], opts);
        team_row = find(strcmpi(behavior.Team, team)); %#ok<EFIND>
        if isempty(team_row)
            team_row = size(behavior, 1) + 1;
        end
        behavior.Team(team_row) = team;
        behavior.RT_forms(team_row) = mean(mean_rts.RT_forms);
        behavior.RT_colors(team_row) = mean(mean_rts.RT_colors);
        behavior.forms_correct(team_row) = mean(mean_correct.forms_correct) * 100;
        behavior.colors_correct(team_row) = mean(mean_correct.colors_correct) * 100;
        writetable(behavior, [filepath filesep 'behavior.csv'], 'Delimiter', ',')
    end
    results_path = sprintf('%s%s%s%sResults%sPipeline%s%s%s', filepath, filesep, team, filesep, filesep, filesep, pipeline, filesep);

    if pipeline == "Original" || pipeline == "ICA"
        onset = 220;
        offset = 300;

    elseif pipeline == "Resample" || pipeline == "ICA+Resample"
        cfg.sign = -1; % Search in the negative polarities
        cfg.peakWidth = 0; % We just want the peak
        % Extract 25% peak amplitude onset and offset
        cfg.extract = {'onset', 'offset'};
        cfg.percAmp = 0.25;

        cfg.times = ERP.times;
        cfg.timeFormat = 'ms';
        cfg.areaBase = 'zero';
        cfg.condition = 15; % Forms
        cfg.peakWin = [100 350]; % Search for N2pc peak between 100 and 350 ms
        cfg.ampLatWin = 'peakWin'; % Search for the on/offset in the above window
        cfg.aggregate = 'GA';
        cfg.chans = ERP.PO7_8_index;
        [res, ~] = latency(cfg, ALLERP); % Liesefeld (2018), Frontiers in Neuroscience
        onset_forms = res.onset;
        offset_forms = res.offset;
        cfg.condition = 18; % Colors
        [res, ~] = latency(cfg, ALLERP);
        onset_colors = res.onset;
        offset_colors = res.offset;

        onset = round(mean([onset_forms, onset_colors]));
        offset = round(mean([offset_forms, offset_colors]));
        force_bootstrap = true;
        if ~exist(sprintf('%spvalues_bootstrap.mat', results_path), 'file') || force_bootstrap
            [pval_forms, pval_colors, pval_difference] = non_parametric_tests(filepath, team, participant_list, pipeline, onset, offset)
        else
            % load(sprintf('%spvalues_bootstrap.mat', results_path), 'pval_forms', 'pval_colors', 'pval_difference');
            load(sprintf('%spvalues_bootstrap.mat', results_path));
            if exist('pval_letters', 'var')
                pval_forms = pval_letters;
                save(sprintf('%spvalues_bootstrap.mat', results_path), "pval_forms", "pval_colors", "pval_difference");
                load(sprintf('%slast_bootstrap.mat', results_path));
                resampled_forms = resampled_letters;
                save(sprintf('%slast_bootstrap.mat', results_path), "resampled_forms", "resampled_colors", "resampled_cond_diff");
            end

            if numel(pval_forms) ~= 1000
                warning("Careful there are %i bootstrapped p-values instead of the expected 1000.", numel(pval_forms));
            end
        end
        median_pval_forms = median(pval_forms);
        median_pval_colors = median(pval_colors);
        median_pval_diff = median(pval_difference);
        if median_pval_forms <= 0.02
            bootstrap_forms_null = 'rejected';
        else
            bootstrap_forms_null = 'not rejected';
        end

        if median_pval_colors <= 0.02
            bootstrap_colors_null = 'rejected';
        else
            bootstrap_colors_null = 'not rejected';
        end

        if median_pval_diff <= 0.02
            bootstrap_diff_null = 'rejected';
        else
            bootstrap_diff_null = 'not rejected';
        end
    end
    % Extract amplitude values for each condition
    [ALLERP, forms_amp] = pop_geterpvalues( ALLERP, [onset offset],  [13 14], [ERP.PO7_8_index], 'Baseline', 'pre', 'Erpsets', 1:length(ALLERP), 'FileFormat', 'wide', 'Filename',...
        [results_path 'mean_amp_forms_N2pc.txt'], 'Fracreplace', 'NaN', 'InterpFactor',  1, 'Measure', 'meanbl', 'PeakOnset',  1, 'Resolution',  9 );
    [ALLERP, colors_amp] = pop_geterpvalues( ALLERP, [onset offset],  [16 17], [ERP.PO7_8_index], 'Baseline', 'pre', 'Erpsets', 1:length(ALLERP), 'FileFormat', 'wide', 'Filename',...
        [results_path 'mean_amp_colors_N2pc.txt'], 'Fracreplace', 'NaN', 'InterpFactor',  1, 'Measure', 'meanbl', 'PeakOnset',  1, 'Resolution',  9 );

    forms_contra_amp = forms_amp(1,:)';
    forms_ipsi_amp = forms_amp(2,:)';
    colors_contra_amp = colors_amp(1,:)';
    colors_ipsi_amp = colors_amp(2,:)';

    % Run paired-sample t-test on amplitude values
    [mean_amps_forms, between_ci_amp_forms, within_ci_amp_forms, stats_amp_forms] = custom_paired_t_test(forms_contra_amp, forms_ipsi_amp, 0.02, "less");
    [mean_amps_colors, between_ci_amp_colors, within_ci_amp_colors, stats_amp_colors] = custom_paired_t_test(colors_contra_amp, colors_ipsi_amp, 0.02, "less");
    [mean_amps_interaction, between_ci_amp_interaction, within_ci_amp_interaction, stats_amp_interaction] = custom_paired_t_test(forms_contra_amp-forms_ipsi_amp, colors_contra_amp-colors_ipsi_amp, 0.02, "less");

    save(sprintf('%sresults_forms.mat', results_path), 'mean_amps_forms', 'between_ci_amp_forms', 'within_ci_amp_forms', 'stats_amp_forms');
    save(sprintf('%sresults_colors.mat', results_path), 'mean_amps_colors', 'between_ci_amp_colors', 'within_ci_amp_colors', 'stats_amp_colors');
    save(sprintf('%sresults_interaction.mat', results_path), 'mean_amps_interaction', 'between_ci_amp_interaction', 'within_ci_amp_interaction', 'stats_amp_interaction');

    mean_amplitudes_table = table(forms_contra_amp, forms_ipsi_amp, ...
        colors_contra_amp, colors_ipsi_amp, ...
        forms_contra_amp - forms_ipsi_amp, colors_contra_amp - colors_ipsi_amp, ...
        'VariableNames', {'Forms_contra', 'Forms_ipsi', 'Colors_contra', 'Colors_ipsi', 'Forms_Contra-Ipsi', 'Colors_Contra-Ipsi'});
    writetable(mean_amplitudes_table, sprintf('%s%s_amplitudes_table.csv', results_path, team));

    % Export GA time series data
    GA = pop_gaverager( ALLERP , 'DQ_flag', 1, 'Erpsets', 1:length(ALLERP), 'ExcludeNullBin', 'on', 'SEM', 'on' );
    time_series_table = table(GA.bindata(ERP.PO7_8_index, :, 13)', GA.bindata(ERP.PO7_8_index, :, 14)',...
        GA.bindata(ERP.PO7_8_index, :, 16)', GA.bindata(ERP.PO7_8_index, :, 17)',...
        GA.bindata(ERP.PO7_8_index, :, 15)', GA.bindata(ERP.PO7_8_index, :, 18)',...
        'VariableNames', {'Forms_contra', 'Forms_ipsi', 'Colors_contra', 'Colors_ipsi', 'Forms_Contra-Ipsi', 'Colors_Contra-Ipsi'});
    writetable(time_series_table, sprintf('%s%s_time_series_table.csv', results_path, team));
    if pipeline == "Original" || pipeline == "ICA"
        % Write results of t-tests to console and files.
        forms_output = sprintf("For the team %s with the %s pipeline, forms distractor arrays between %i ms and %i ms with correct responses:\n" + ...
            "The mean contralateral amplitude is %.2f µV ± %.2f.\n" + ...
            "The mean ipsilateral amplitude is %.2f µV ± %.2f.\n" + ...
            "Thus, the mean contra-ipsi difference is %.2f µV ± %.2f.\n" + ...
            "One-tailed paired-sample t-test with N = %i, alpha = %.2e" + ...
            " and hypothesis: contralateral µV < ipsilateral µV.\n" + ...
            "t(%i) = %.2f, p = %.2e, dz = %.2f [%.2f, %.2f], dz s.e. = %.2f," + ...
            " gz = %.2f [%.2f, %.2f], gz s.e = %.2f.\n" + ...
            "The null hypothesis is therefore %s.\n" + ...
            "Effect sizes to convert to r (for meta-analyses):\n" + ...
            "drm = %.2f [%.2f, %.2f], drm s.e. = %.2f." + ...
            " grm = %.2f [%.2f, %.2f], grm s.e. = %.2f.\n", ...
            team, pipeline, onset, offset, mean_amps_forms(1), within_ci_amp_forms(1), ...
            mean_amps_forms(2), within_ci_amp_forms(2), ...
            stats_amp_forms.mean_diff, stats_amp_forms.diff_ci, ...
            stats_amp_forms.n, stats_amp_forms.alpha, ...
            stats_amp_forms.df, stats_amp_forms.t, stats_amp_forms.p, ...
            stats_amp_forms.dz.eff, stats_amp_forms.dz.low_ci,...
            stats_amp_forms.dz.high_ci, stats_amp_forms.dz.se, ...
            stats_amp_forms.gz.eff, stats_amp_forms.gz.low_ci,...
            stats_amp_forms.gz.high_ci, stats_amp_forms.gz.se, ...
            stats_amp_forms.reject_null, ...
            stats_amp_forms.drm.eff, stats_amp_forms.drm.low_ci,...
            stats_amp_forms.drm.high_ci, stats_amp_forms.drm.se,...
            stats_amp_forms.grm.eff, stats_amp_forms.grm.low_ci,...
            stats_amp_forms.grm.high_ci, stats_amp_forms.grm.se) %#ok<*NOPRT>

        forms_fileID = fopen(sprintf('%sforms_output.txt', results_path), 'w');
        fprintf(forms_fileID, forms_output);
        fclose(forms_fileID);

        colors_output = sprintf("For the team %s with the %s pipeline, colors distractor arrays between %i ms and %i ms with correct responses:\n" + ...
            "The mean contralateral amplitude is %.2f µV ± %.2f.\n" + ...
            "The mean ipsilateral amplitude is %.2f µV ± %.2f.\n" + ...
            "Thus, the mean contra-ipsi difference is %.2f µV ± %.2f.\n" + ...
            "One-tailed paired-sample t-test with N = %i, alpha = %.2e" + ...
            " and hypothesis: contralateral µV < ipsilateral µV.\n" + ...
            "t(%i) = %.2f, p = %.2e, dz = %.2f [%.2f, %.2f], dz s.e. = %.2f," + ...
            " gz = %.2f [%.2f, %.2f], gz s.e. = %.2f.\n" + ...
            "The null hypothesis is therefore %s.\n" + ...
            "Effect sizes to convert to r (for meta-analyses):\n" + ...
            "drm = %.2f [%.2f, %.2f], drm s.e. = %.2f." + ...
            " grm = %.2f [%.2f, %.2f], grm s.e. = %.2f.\n", ...
            team, pipeline, onset, offset, mean_amps_colors(1), between_ci_amp_colors(1), ...
            mean_amps_colors(2), between_ci_amp_colors(2),...
            stats_amp_colors.mean_diff, stats_amp_colors.diff_ci,...
            stats_amp_colors.n, stats_amp_colors.alpha,...
            stats_amp_colors.df, stats_amp_colors.t, stats_amp_colors.p,...
            stats_amp_colors.dz.eff, stats_amp_colors.dz.low_ci,...
            stats_amp_colors.dz.high_ci, stats_amp_colors.dz.se,...
            stats_amp_colors.gz.eff, stats_amp_colors.gz.low_ci,...
            stats_amp_colors.gz.high_ci, stats_amp_colors.gz.se,...
            stats_amp_colors.reject_null, ...
            stats_amp_colors.drm.eff, stats_amp_colors.drm.low_ci,...
            stats_amp_colors.drm.high_ci, stats_amp_colors.drm.se,...
            stats_amp_colors.grm.eff, stats_amp_colors.grm.low_ci,...
            stats_amp_colors.grm.high_ci, stats_amp_colors.grm.se)

        colors_fileID = fopen(sprintf('%scolors_output.txt', results_path), 'w');
        fprintf(colors_fileID, colors_output);
        fclose(colors_fileID);

        interaction_output = sprintf("For the team %s with the %s pipeline, contra-ipsi forms vs. colors distractor arrays between %i ms and %i ms with correct responses:\n" + ...
            "The mean contra-ipsi forms amplitude is %.2f µV ± %.2f.\n" + ...
            "The mean contra-ipsi colors amplitude is %.2f µV ± %.2f.\n" + ...
            "Thus, the mean difference between forms and colors is %.2f µV ± %.2f.\n" + ...
            "One-tailed paired-sample t-test with N = %i, alpha = %.2e" + ...
            " and hypothesis: forms µV < colors µV.\n" + ...
            "t(%i) = %.2f, p = %.2e, dz = %.2f [%.2f, %.2f], dz s.e. = %.2f," + ...
            " gz = %.2f [%.2f, %.2f], gz s.e. = %.2f.\n" + ...
            "The null hypothesis is therefore %s.\n" + ...
            "Effect sizes to convert to r (for meta-analyses):\n" + ...
            "drm = %.2f [%.2f, %.2f], drm s.e. = %.2f." + ...
            " grm = %.2f [%.2f, %.2f], grm s.e. = %.2f.\n", ...
            team, pipeline, onset, offset, mean_amps_interaction(1), between_ci_amp_interaction(1), ...
            mean_amps_interaction(2), between_ci_amp_interaction(2),...
            stats_amp_interaction.mean_diff, stats_amp_interaction.diff_ci,...
            stats_amp_interaction.n, stats_amp_interaction.alpha,...
            stats_amp_interaction.df, stats_amp_interaction.t, stats_amp_interaction.p,...
            stats_amp_interaction.dz.eff, stats_amp_interaction.dz.low_ci,...
            stats_amp_interaction.dz.high_ci, stats_amp_interaction.dz.se,...
            stats_amp_interaction.gz.eff, stats_amp_interaction.gz.low_ci,...
            stats_amp_interaction.gz.high_ci, stats_amp_interaction.gz.se,...
            stats_amp_interaction.reject_null, ...
            stats_amp_interaction.drm.eff, stats_amp_interaction.drm.low_ci,...
            stats_amp_interaction.drm.high_ci, stats_amp_interaction.drm.se,...
            stats_amp_interaction.grm.eff, stats_amp_interaction.grm.low_ci,...
            stats_amp_interaction.grm.high_ci, stats_amp_interaction.grm.se)

        interaction_fileID = fopen(sprintf('%sinteraction_output.txt', results_path), 'w');
        fprintf(interaction_fileID, interaction_output);
        fclose(interaction_fileID);
    elseif pipeline == "Resample" || pipeline == "ICA+Resample"
        forms_output = sprintf("For the team %s with the %s pipeline, forms distractor arrays between %i ms and %i ms with correct responses:\n" + ...
            "The mean contralateral amplitude is %.2f µV ± %.2f.\n" + ...
            "The mean ipsilateral amplitude is %.2f µV ± %.2f.\n" + ...
            "Thus, the mean contra-ipsi difference is %.2f µV ± %.2f.\n" + ...
            "One-tailed paired-sample t-test with N = %i, alpha = %.2e" + ...
            " and hypothesis: contralateral µV < ipsilateral µV.\n" + ...
            "t(%i) = %.2f, p = %.2e, gz = %.2f [%.2f, %.2f], gz s.e = %.2f.\n" + ...
            "Critically, the median p-value after 1000 bootstrap procedures (10'000 resamples in each) was %.3f.\n" + ...
            "Therefore, the null hypothesis is %s.", ...
            team, pipeline, onset, offset, mean_amps_forms(1), within_ci_amp_forms(1), ...
            mean_amps_forms(2), within_ci_amp_forms(2), ...
            stats_amp_forms.mean_diff, stats_amp_forms.diff_ci, ...
            stats_amp_forms.n, stats_amp_forms.alpha, ...
            stats_amp_forms.df, stats_amp_forms.t, stats_amp_forms.p, ...
            stats_amp_forms.gz.eff, stats_amp_forms.gz.low_ci,...
            stats_amp_forms.gz.high_ci, stats_amp_forms.gz.se, ...
            median_pval_forms, bootstrap_forms_null)

        forms_fileID = fopen(sprintf('%sforms_output.txt', results_path), 'w');
        fprintf(forms_fileID, forms_output);
        fclose(forms_fileID);

        colors_output = sprintf("For the team %s with the %s pipeline, colors distractor arrays between %i ms and %i ms with correct responses:\n" + ...
            "The mean contralateral amplitude is %.2f µV ± %.2f.\n" + ...
            "The mean ipsilateral amplitude is %.2f µV ± %.2f.\n" + ...
            "Thus, the mean contra-ipsi difference is %.2f µV ± %.2f.\n" + ...
            "One-tailed paired-sample t-test with N = %i, alpha = %.2e" + ...
            " and hypothesis: contralateral µV < ipsilateral µV.\n" + ...
            "t(%i) = %.2f, p = %.2e, gz = %.2f [%.2f, %.2f], gz s.e. = %.2f.\n" + ...
            "Critically, the median p-value after 1000 bootstrap procedures (10'000 resamples in each) was %.3f.\n" + ...
            "Therefore, the null hypothesis is %s.", ...
            team, pipeline, onset, offset, mean_amps_colors(1), between_ci_amp_colors(1), ...
            mean_amps_colors(2), between_ci_amp_colors(2),...
            stats_amp_colors.mean_diff, stats_amp_colors.diff_ci,...
            stats_amp_colors.n, stats_amp_colors.alpha,...
            stats_amp_colors.df, stats_amp_colors.t, stats_amp_colors.p,...
            stats_amp_colors.gz.eff, stats_amp_colors.gz.low_ci,...
            stats_amp_colors.gz.high_ci, stats_amp_colors.gz.se,...
            median_pval_colors, bootstrap_colors_null)

        colors_fileID = fopen(sprintf('%scolors_output.txt', results_path), 'w');
        fprintf(colors_fileID, colors_output);
        fclose(colors_fileID);

        interaction_output = sprintf("For the team %s with the %s pipeline, contra-ipsi forms vs. colors distractor arrays between %i ms and %i ms with correct responses:\n" + ...
            "The mean contra-ipsi forms amplitude is %.2f µV ± %.2f.\n" + ...
            "The mean contra-ipsi colors amplitude is %.2f µV ± %.2f.\n" + ...
            "Thus, the mean difference between forms and colors is %.2f µV ± %.2f.\n" + ...
            "One-tailed paired-sample t-test with N = %i, alpha = %.2e" + ...
            " and hypothesis: forms µV < colors µV.\n" + ...
            "t(%i) = %.2f, p = %.2e, gz = %.2f [%.2f, %.2f], gz s.e. = %.2f.\n" + ...
            "Critically, the median p-value after 1000 bootstrap procedures (10'000 resamples in each) was %.3f.\n" + ...
            "Therefore, the null hypothesis is %s.",...
            team, pipeline, onset, offset, mean_amps_interaction(1), between_ci_amp_interaction(1), ...
            mean_amps_interaction(2), between_ci_amp_interaction(2),...
            stats_amp_interaction.mean_diff, stats_amp_interaction.diff_ci,...
            stats_amp_interaction.n, stats_amp_interaction.alpha,...
            stats_amp_interaction.df, stats_amp_interaction.t, stats_amp_interaction.p,...
            stats_amp_interaction.gz.eff, stats_amp_interaction.gz.low_ci,...
            stats_amp_interaction.gz.high_ci, stats_amp_interaction.gz.se,...
            median_pval_diff, bootstrap_diff_null)

        interaction_fileID = fopen(sprintf('%sinteraction_output.txt', results_path), 'w');
        fprintf(interaction_fileID, interaction_output);
        fclose(interaction_fileID);
    end
end
